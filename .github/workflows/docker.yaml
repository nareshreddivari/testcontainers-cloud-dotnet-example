name: Testcontainers Cloud Workflow

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Pull Testcontainers Image Manually
        run: |
          docker pull testcontainers/ryuk
          docker pull postgres:14-alpine

      - name: Download and Check Testcontainers Cloud Install Script
        run: |
          echo "Downloading Testcontainers Cloud..."
          curl -fsSL https://get.testcontainers.cloud -o install-tc.sh
          cat install-tc.sh
          chmod +x install-tc.sh
          ./install-tc.sh || echo "⚠️ Failed to install via primary method, trying alternative..."

      - name: Install Testcontainers Cloud (Manual)
        run: |
          curl -fsSL https://download.testcontainers.cloud/testcontainers-cloud-linux -o testcontainers-cloud
          chmod +x testcontainers-cloud
          mv testcontainers-cloud $HOME/.testcontainers/bin/
          export PATH="$HOME/.testcontainers/bin:$PATH"
          echo "export PATH=\"$HOME/.testcontainers/bin:\$PATH\"" >> $HOME/.bashrc
          source $HOME/.bashrc

      - name: Verify Testcontainers Cloud Installation
        run: |
          export PATH="$HOME/.testcontainers/bin:$PATH"
          if ! command -v testcontainers-cloud &> /dev/null; then
            echo "❌ Testcontainers Cloud is NOT installed!"
            exit 1
          fi
          echo "✅ Testcontainers Cloud installed successfully!"

      - name: Start Testcontainers Cloud Agent
        run: |
          testcontainers-cloud &
          sleep 5
          testcontainers-cloud --status || echo "❌ Testcontainers Cloud agent failed to start!"

      - name: Set Docker Context to Testcontainers Cloud
        run: |
          docker context use tcc || { echo "❌ Testcontainers Cloud context not available!"; exit 1; }
          docker context ls

      - name: Verify Docker is Running
        run: |
          if ! docker ps > /dev/null 2>&1; then
            echo "❌ Docker is not running! Exiting..."
            exit 1
          fi
          echo "✅ Docker is running."

      - name: List Running Docker Containers
        run: docker ps -a

      - name: Run Tests with Testcontainers Cloud
        run: |
          cd tests
          dotnet test --logger:"console;verbosity=detailed"
